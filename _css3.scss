@mixin box-sizing($box) {
    -webkit-box-sizing: $box;
    -moz-box-sizing: $box;
    box-sizing: $box;
}

// Do not use when transitionning prefixed properties
// to avoid impossible code like `-moz-transition: -webkit-border-radius 1s`
@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    transition: $args;
}

@mixin transform($args) {
    -webkit-transform: $args;
    -moz-transform: $args;
    -ms-transform: $args;
    -o-transform: $args;
    transform: $args;
}

@mixin transform-origin($args) {
    -webkit-transform-origin: $args;
    -moz-transform-origin: $args;
    -ms-transform-origin: $args;
    -o-transform-origin: $args;
    transform-origin: $args;
}

@mixin rotate($angle) {
    @include transform(rotate($angle));
}

@mixin animation($args) {
    -webkit-animation: $args;
    -moz-animation: $args;
    animation: $args;
}

@mixin keyframes($name) {
    @-webkit-keyframes $name { @content; }
    @-moz-keyframes $name { @content; }
    @keyframes $name { @content; }
}

@mixin border-radius($radius: 5px) {
    // If we want to draw a circle, output a pixel value instead,
    // as older versions of WebKit do not support % in border-radius
    @if $radius == 50% {
        $radius: 1000px;
    }
    -webkit-border-radius: rem($radius);
    border-radius: rem($radius);
}

@mixin box-shadow($args...) {
    -webkit-box-shadow: $args;
    -moz-box-shadow: $args;
    box-shadow: $args;
}

@mixin background-size($args...) {
    -webkit-background-size: $args;
    -moz-background-size: $args;
    background-size: $args;
}

@mixin flex($flex-grow: 0, $flex-shrink: 1, $flex-basis: auto) {
    -webkit-box-flex: $flex-grow;
    -moz-box-flex: $flex-grow;
    -webkit-flex: $flex-grow $flex-shrink $flex-basis;
    -ms-flex: $flex-grow $flex-shrink $flex-basis;
    flex: $flex-grow $flex-shrink $flex-basis;
}

@mixin flex-grow($value: 0) {
    -webkit-box-flex: $value;
    -webkit-flex-grow: $value;
    -moz-flex-grow: $value;
    -ms-flex-positive: $value;
    flex-grow: $value;
}

@mixin flex-basis($value: auto) {
    -webkit-flex-basis: $value;
    -moz-flex-basis: $value;
    -ms-flex-preferred-size: $value;
    flex-basis: $value;
}

// Sticky positioning
// Support is very limited but should be used in iOS
// See http://updates.html5rocks.com/2012/08/Stick-your-landings-position-sticky-lands-in-WebKit
@mixin sticky {
    position: -webkit-sticky; // iOS 6+
    position: -moz-sticky;
    position: -ms-sticky;
    position: sticky;
}

// Vertical linear gradient with a plain fallback for older browsers
@mixin simple-gradient($from, $to) {
    // Fix for browsers not understanding transparent
    @if $from == transparent {
        $from: transparentize($to, 1);
    }

    @if $to == transparent {
        $to: transparentize($from, 1);
    }
    background-color: $from;
    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($from), to($to));
    background-image: -webkit-linear-gradient($from, $to);
    background-image: linear-gradient(to bottom, $from, $to);
}
